{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/lib/prisma.js"],"sourcesContent":["import { PrismaClient } from \"@prisma/client\";\r\n\r\nconst prisma = global.prisma || new PrismaClient()\r\nif (process.env.NODE_ENV !== 'production') global.prisma = prisma\r\n\r\nexport default prisma"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,SAAS,OAAO,MAAM,IAAI,IAAI,6IAAA,CAAA,eAAY;AAChD,wCAA2C,OAAO,MAAM,GAAG;uCAE5C"}},
    {"offset": {"line": 31, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/lib/data.js"],"sourcesContent":["'use server'\r\nimport  prisma  from '@/lib/prisma'\r\n\r\nexport async function getUserById(id) {\r\n  const user = await prisma.user.findUnique({\r\n    where: { id }\r\n  });\r\n  return user\r\n}\r\n\r\nexport async function getUserByEmail(email) {\r\n  const user = await prisma.user.findUnique({\r\n    where: { email }\r\n  });\r\n  return user\r\n}\r\n\r\n\r\n\r\n\r\nasync function obtenerRepartidores() {\r\n  const repartidores = await prisma.repartidor.findMany()\r\n  return repartidores\r\n}\r\n\r\n\r\nasync function obtenerRepartidor(id) {\r\n  const repartidor = await prisma.repartidor.findUnique({\r\n      where: { id: +id }\r\n  })\r\n  return repartidor\r\n}\r\n\r\n\r\n// ---------------------   PEDIDOS -----------------------\r\n\r\nasync function obtenerPedidos() {\r\n  const pedidos = await prisma.pedido.findMany({\r\n      include: {\r\n          repartidor: true,\r\n          pizzas: true,\r\n      }\r\n  })\r\n  return pedidos\r\n}\r\n\r\n\r\nasync function obtenerPedido(id) {\r\n  const pedido = await prisma.pedido.findUnique({\r\n      where: { id: +id },\r\n      include: {\r\n          repartidor: true,\r\n          pizzas: true,\r\n      }\r\n  })\r\n  return pedido\r\n}\r\n\r\n// ---------------------   PIZZAS -----------------------\r\n\r\nasync function obtenerPizzas() {\r\n  const pizzas = await prisma.pizza.findMany()\r\n  return pizzas\r\n}\r\n\r\n\r\nasync function obtenerPizza(id) {\r\n  const pizza = await prisma.pizza.findUnique({\r\n      where: { id: +id }\r\n  })\r\n  return pizza\r\n}\r\n\r\n\r\nexport {\r\n  obtenerRepartidores,\r\n  obtenerRepartidor,\r\n  obtenerPedidos,\r\n  obtenerPedido,\r\n  obtenerPizzas,\r\n  obtenerPizza\r\n}"],"names":[],"mappings":";;;;;;;;;;AACA;AADA;;AAGO,eAAe,YAAY,EAAE;IAClC,MAAM,OAAO,MAAM,oHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACxC,OAAO;YAAE;QAAG;IACd;IACA,OAAO;AACT;AAEO,eAAe,eAAe,KAAK;IACxC,MAAM,OAAO,MAAM,oHAAA,CAAA,UAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACxC,OAAO;YAAE;QAAM;IACjB;IACA,OAAO;AACT;AAKA,eAAe;IACb,MAAM,eAAe,MAAM,oHAAA,CAAA,UAAM,CAAC,UAAU,CAAC,QAAQ;IACrD,OAAO;AACT;AAGA,eAAe,kBAAkB,EAAE;IACjC,MAAM,aAAa,MAAM,oHAAA,CAAA,UAAM,CAAC,UAAU,CAAC,UAAU,CAAC;QAClD,OAAO;YAAE,IAAI,CAAC;QAAG;IACrB;IACA,OAAO;AACT;AAGA,0DAA0D;AAE1D,eAAe;IACb,MAAM,UAAU,MAAM,oHAAA,CAAA,UAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;QACzC,SAAS;YACL,YAAY;YACZ,QAAQ;QACZ;IACJ;IACA,OAAO;AACT;AAGA,eAAe,cAAc,EAAE;IAC7B,MAAM,SAAS,MAAM,oHAAA,CAAA,UAAM,CAAC,MAAM,CAAC,UAAU,CAAC;QAC1C,OAAO;YAAE,IAAI,CAAC;QAAG;QACjB,SAAS;YACL,YAAY;YACZ,QAAQ;QACZ;IACJ;IACA,OAAO;AACT;AAEA,yDAAyD;AAEzD,eAAe;IACb,MAAM,SAAS,MAAM,oHAAA,CAAA,UAAM,CAAC,KAAK,CAAC,QAAQ;IAC1C,OAAO;AACT;AAGA,eAAe,aAAa,EAAE;IAC5B,MAAM,QAAQ,MAAM,oHAAA,CAAA,UAAM,CAAC,KAAK,CAAC,UAAU,CAAC;QACxC,OAAO;YAAE,IAAI,CAAC;QAAG;IACrB;IACA,OAAO;AACT"}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 120, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/auth.config.js"],"sourcesContent":["import Google from \"@auth/core/providers/google\"\r\nimport GitHub from '@auth/core/providers/github'\r\nimport Discord from '@auth/core/providers/discord'\r\nimport Credentials from \"@auth/core/providers/credentials\"\r\nimport { getUserByEmail } from \"@/lib/data\"\r\n\r\nexport default {\r\n    providers: [\r\n        Google,\r\n        GitHub,\r\n        Discord,\r\n        Credentials({\r\n            async authorize(credentials) {\r\n                console.log('AUTHORIZE')\r\n                const user = await getUserByEmail(credentials.email)\r\n                return user\r\n            },\r\n        }),\r\n    ]\r\n}\r\n"],"names":[],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;;;;;;uCAEe;IACX,WAAW;QACP,qJAAA,CAAA,UAAM;QACN,qJAAA,CAAA,UAAM;QACN,sJAAA,CAAA,UAAO;QACP,CAAA,GAAA,0JAAA,CAAA,UAAW,AAAD,EAAE;YACR,MAAM,WAAU,WAAW;gBACvB,QAAQ,GAAG,CAAC;gBACZ,MAAM,OAAO,MAAM,CAAA,GAAA,kHAAA,CAAA,iBAAc,AAAD,EAAE,YAAY,KAAK;gBACnD,OAAO;YACX;QACJ;KACH;AACL"}},
    {"offset": {"line": 147, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 153, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/middleware.js"],"sourcesContent":["// Run on edge\r\nimport NextAuth from \"next-auth\";\r\nimport authConfig from \"@/auth.config\";\r\n\r\nconst { auth } = NextAuth(authConfig);\r\n\r\n\r\nexport default auth((req) => {\r\n  console.log(`MIDDLEWARE`, req.nextUrl.pathname, req.auth);\r\n\r\n  if (!req.auth) {\r\n    const callbackUrl = req.nextUrl.pathname + req.nextUrl.search\r\n    const encodedCallbackUrl = encodeURIComponent(callbackUrl);\r\n\r\n    return Response.redirect(req.nextUrl.origin + `/auth/login?callbackUrl=${encodedCallbackUrl}`)\r\n  }\r\n})\r\n\r\n\r\nexport const config = {\r\n  matcher: [\r\n    /*\r\n     * Match all request paths except for the ones starting with:\r\n     * - api (API routes)\r\n     * - images\r\n     * - auth\r\n     * - about\r\n     * - _next/static (static files)\r\n     * - _next/image (image optimization files)\r\n     * - favicon.ico, sitemap.xml, robots.txt (metadata files)\r\n     * - $ (home page)\r\n     */\r\n    '/((?!api|images|auth|about|_next/static|_next/image|favicon.ico|sitemap.xml|robots.txt|$).*)',\r\n  ],\r\n}\r\n\r\n// export const config = {\r\n//   matcher: [\r\n//     \"/dashboard(.*)\",\r\n//     \"/admin(.*)\",\r\n//     \"/proveedores(.*)\",\r\n//     \"/productos(.*)\",\r\n//   ],\r\n// };"],"names":[],"mappings":"AAAA,cAAc;;;;;AACd;AACA;AADA;;;AAGA,MAAM,EAAE,IAAI,EAAE,GAAG,CAAA,GAAA,qJAAA,CAAA,UAAQ,AAAD,EAAE,qHAAA,CAAA,UAAU;uCAGrB,KAAK,CAAC;IACnB,QAAQ,GAAG,CAAC,CAAC,UAAU,CAAC,EAAE,IAAI,OAAO,CAAC,QAAQ,EAAE,IAAI,IAAI;IAExD,IAAI,CAAC,IAAI,IAAI,EAAE;QACb,MAAM,cAAc,IAAI,OAAO,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,MAAM;QAC7D,MAAM,qBAAqB,mBAAmB;QAE9C,OAAO,SAAS,QAAQ,CAAC,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,wBAAwB,EAAE,oBAAoB;IAC/F;AACF;AAGO,MAAM,SAAS;IACpB,SAAS;QACP;;;;;;;;;;KAUC,GACD;KACD;AACH,EAEA,0BAA0B;CAC1B,eAAe;CACf,wBAAwB;CACxB,oBAAoB;CACpB,0BAA0B;CAC1B,wBAAwB;CACxB,OAAO;CACP,KAAK"}},
    {"offset": {"line": 195, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}